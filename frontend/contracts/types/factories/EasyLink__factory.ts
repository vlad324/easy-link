/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EasyLink, EasyLinkInterface } from "../EasyLink";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_levels",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "levelHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSize",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "spentNullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260008060016101000a81548163ffffffff021916908363ffffffff1602179055503480156200003257600080fd5b50604051620019b7380380620019b78339818101604052810190620000589190620004e1565b818160008260ff1611620000a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200009a906200059e565b60405180910390fd5b60098260ff161115620000ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e49062000636565b60405180910390fd5b816000806101000a81548160ff021916908360ff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900460ff166002620001579190620007eb565b63ffffffff1660a08163ffffffff168152505060005b8260ff168160ff161015620001c357620001908160ff166200020360201b60201c565b600160008360ff1660ff168152602001908152602001600020819055508080620001ba9062000820565b9150506200016d565b5050508273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505050620008c0565b600080820362000236577f1b47eebd31a8cdbc109d42a60ae2f77d3916fdf63e1d6d3c9614c84c66587616905062000434565b6001820362000268577f0998c45a8df60690d2142a1e29541e4c5203c5f0039e1f736a48a4ea3939996c905062000434565b600282036200029a577f1b8525aeb12de720fbc32b7a5b505efc1bd4396e223644aed9d48c4ecc5a6451905062000434565b60038203620002cc577f1937e198ced295751ebf9996ad4429473bb657521a76f372ab62eab9dd09f729905062000434565b60048203620002fe577f043fae75b0a1c6cfe6bbd4a260fc421f26cd352974d31d3627896a677f3931a3905062000434565b600582036200032f577e7c68bad132df37627c5fa5e1c06601d5af97124b0bd19f6e29593e1814ae51905062000434565b6006820362000361577f2aca3ddb1f0c22cd53383b85231c1a10634f160ce945c639b2b799ed8b37f5ae905062000434565b6007820362000393577f037ca32d66c15af3f7cb3cbc7d5b0fad9104582d24416fdd85c50586d3079a0e905062000434565b60088203620003c5577f1c9e22b869e38db54e772baa9a4765b9ccb1ea458ea4a50c3ce9ce5152a95581905062000434565b60098203620003f7577f283f3963c14e4a1873557637cf74773b5de1d3dcafa8c2c82f18720fabd5e0f9905062000434565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200042b906200089e565b60405180910390fd5b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200046b826200043e565b9050919050565b6200047d816200045e565b81146200048957600080fd5b50565b6000815190506200049d8162000472565b92915050565b600060ff82169050919050565b620004bb81620004a3565b8114620004c757600080fd5b50565b600081519050620004db81620004b0565b92915050565b600080600060608486031215620004fd57620004fc62000439565b5b60006200050d868287016200048c565b93505060206200052086828701620004ca565b925050604062000533868287016200048c565b9150509250925092565b600082825260208201905092915050565b7f5f6c6576656c732073686f756c642062652067726561746572207468616e2030600082015250565b6000620005866020836200053d565b915062000593826200054e565b602082019050919050565b60006020820190508181036000830152620005b98162000577565b9050919050565b7f5f6c6576656c732073686f756c64206e6f74206265206772656174657220746860008201527f616e203900000000000000000000000000000000000000000000000000000000602082015250565b60006200061e6024836200053d565b91506200062b82620005c0565b604082019050919050565b6000602082019050818103600083015262000651816200060f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115620006e657808604811115620006be57620006bd62000658565b5b6001851615620006ce5780820291505b8081029050620006de8562000687565b94506200069e565b94509492505050565b600082620007015760019050620007d4565b81620007115760009050620007d4565b81600181146200072a576002811462000735576200076b565b6001915050620007d4565b60ff8411156200074a576200074962000658565b5b8360020a91508482111562000764576200076362000658565b5b50620007d4565b5060208310610133831016604e8410600b8410161715620007a55782820a9050838111156200079f576200079e62000658565b5b620007d4565b620007b4848484600162000694565b92509050818404811115620007ce57620007cd62000658565b5b81810290505b9392505050565b600063ffffffff82169050919050565b6000620007f882620007db565b91506200080583620004a3565b92506200081863ffffffff8484620006ef565b905092915050565b60006200082d82620004a3565b915060ff820362000843576200084262000658565b5b600182019050919050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000620008866013836200053d565b915062000893826200084e565b602082019050919050565b60006020820190508181036000830152620008b98162000877565b9050919050565b60805160a05160c0516110b9620008fe60003960006102ee0152600081816102b401526106d90152600081816106b3015261086501526110b96000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063811608fd1161008c578063cd87a3b411610066578063cd87a3b414610216578063ce7597c914610234578063e829558814610264578063ed33639f14610294576100cf565b8063811608fd1461019a578063b6b55f25146101ca578063c2b40ae4146101e6576100cf565b80632565b159146100d45780632986c0e5146100f25780632b7ac3f314610110578063414a37ba1461012e57806349ce89971461014c5780634ecf518b1461017c575b600080fd5b6100dc6102b2565b6040516100e991906109ff565b60405180910390f35b6100fa6102d6565b60405161010791906109ff565b60405180910390f35b6101186102ec565b6040516101259190610a5b565b60405180910390f35b610136610310565b6040516101439190610a8f565b60405180910390f35b61016660048036038101906101619190610adb565b610334565b6040516101739190610b23565b60405180910390f35b610184610354565b6040516101919190610b5a565b60405180910390f35b6101b460048036038101906101af9190610adb565b610365565b6040516101c19190610b23565b60405180910390f35b6101e460048036038101906101df9190610adb565b610385565b005b61020060048036038101906101fb9190610adb565b61045c565b60405161020d9190610a8f565b60405180910390f35b61021e610474565b60405161022b9190610b5a565b60405180910390f35b61024e60048036038101906102499190610ba1565b610479565b60405161025b9190610a8f565b60405180910390f35b61027e60048036038101906102799190610adb565b610491565b60405161028b9190610a8f565b60405180910390f35b61029c6106b1565b6040516102a99190610c2d565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b600060019054906101000a900463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60036020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b6003600082815260200190815260200160002060009054906101000a900460ff16156103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd90610ca5565b60405180910390fd5b60006103f1826106d5565b905060016003600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507f7bbfdf3b7869b8cc969ad02e8d3ceed756e762259111d280f0efa92a816956198282604051610450929190610cc5565b60405180910390a15050565b60026020528060005260406000206000915090505481565b601e81565b60016020528060005260406000206000915090505481565b60008082036104c2577f1b47eebd31a8cdbc109d42a60ae2f77d3916fdf63e1d6d3c9614c84c6658761690506106ac565b600182036104f2577f0998c45a8df60690d2142a1e29541e4c5203c5f0039e1f736a48a4ea3939996c90506106ac565b60028203610522577f1b8525aeb12de720fbc32b7a5b505efc1bd4396e223644aed9d48c4ecc5a645190506106ac565b60038203610552577f1937e198ced295751ebf9996ad4429473bb657521a76f372ab62eab9dd09f72990506106ac565b60048203610582577f043fae75b0a1c6cfe6bbd4a260fc421f26cd352974d31d3627896a677f3931a390506106ac565b600582036105b1577e7c68bad132df37627c5fa5e1c06601d5af97124b0bd19f6e29593e1814ae5190506106ac565b600682036105e1577f2aca3ddb1f0c22cd53383b85231c1a10634f160ce945c639b2b799ed8b37f5ae90506106ac565b60078203610611577f037ca32d66c15af3f7cb3cbc7d5b0fad9104582d24416fdd85c50586d3079a0e90506106ac565b60088203610641577f1c9e22b869e38db54e772baa9a4765b9ccb1ea458ea4a50c3ce9ce5152a9558190506106ac565b60098203610671577f283f3963c14e4a1873557637cf74773b5de1d3dcafa8c2c82f18720fabd5e0f990506106ac565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a390610d3a565b60405180910390fd5b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600060019054906101000a900463ffffffff1663ffffffff1603610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e90610da6565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182106107b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b090610e12565b60405180910390fd5b60008060019054906101000a900463ffffffff169050600083905060008060005b60008054906101000a900460ff1660ff168160ff1610156109355760006002866108049190610e61565b63ffffffff16036108435783925061081e8160ff16610491565b915083600160008360ff1660ff16815260200190815260200160002081905550610863565b600160008260ff1660ff1681526020019081526020016000205492508391505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329a5f2f66040518060400160405280868152602001858152506040518263ffffffff1660e01b81526004016108d09190610f3d565b602060405180830381865afa1580156108ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109119190610f6d565b93506002856109209190610fc9565b9450808061092d90610ffa565b9150506107da565b508260026000601e60ff16600060019054906101000a900463ffffffff1661095d9190610e61565b63ffffffff168152602001908152602001600020819055506000600181819054906101000a900463ffffffff168092919061099790611023565b91906101000a81548163ffffffff021916908363ffffffff160217905550506001600060019054906101000a900463ffffffff166109d5919061104f565b945050505050919050565b600063ffffffff82169050919050565b6109f9816109e0565b82525050565b6000602082019050610a1460008301846109f0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4582610a1a565b9050919050565b610a5581610a3a565b82525050565b6000602082019050610a706000830184610a4c565b92915050565b6000819050919050565b610a8981610a76565b82525050565b6000602082019050610aa46000830184610a80565b92915050565b600080fd5b610ab881610a76565b8114610ac357600080fd5b50565b600081359050610ad581610aaf565b92915050565b600060208284031215610af157610af0610aaa565b5b6000610aff84828501610ac6565b91505092915050565b60008115159050919050565b610b1d81610b08565b82525050565b6000602082019050610b386000830184610b14565b92915050565b600060ff82169050919050565b610b5481610b3e565b82525050565b6000602082019050610b6f6000830184610b4b565b92915050565b610b7e81610b3e565b8114610b8957600080fd5b50565b600081359050610b9b81610b75565b92915050565b600060208284031215610bb757610bb6610aaa565b5b6000610bc584828501610b8c565b91505092915050565b6000819050919050565b6000610bf3610bee610be984610a1a565b610bce565b610a1a565b9050919050565b6000610c0582610bd8565b9050919050565b6000610c1782610bfa565b9050919050565b610c2781610c0c565b82525050565b6000602082019050610c426000830184610c1e565b92915050565b600082825260208201905092915050565b7f4475706c69636174656420636f6d6d69746d656e740000000000000000000000600082015250565b6000610c8f601583610c48565b9150610c9a82610c59565b602082019050919050565b60006020820190508181036000830152610cbe81610c82565b9050919050565b6000604082019050610cda6000830185610a80565b610ce760208301846109f0565b9392505050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000610d24601383610c48565b9150610d2f82610cee565b602082019050919050565b60006020820190508181036000830152610d5381610d17565b9050919050565b7f4d65726b6c6520747265652069732066756c6c00000000000000000000000000600082015250565b6000610d90601383610c48565b9150610d9b82610d5a565b602082019050919050565b60006020820190508181036000830152610dbf81610d83565b9050919050565b7f4c6561662068617320746f2062652077697468696e206669656c642073697a65600082015250565b6000610dfc602083610c48565b9150610e0782610dc6565b602082019050919050565b60006020820190508181036000830152610e2b81610def565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6c826109e0565b9150610e77836109e0565b925082610e8757610e86610e32565b5b828206905092915050565b600060029050919050565b600081905092915050565b6000819050919050565b610ebb81610a76565b82525050565b6000610ecd8383610eb2565b60208301905092915050565b6000602082019050919050565b610eef81610e92565b610ef98184610e9d565b9250610f0482610ea8565b8060005b83811015610f35578151610f1c8782610ec1565b9650610f2783610ed9565b925050600181019050610f08565b505050505050565b6000604082019050610f526000830184610ee6565b92915050565b600081519050610f6781610aaf565b92915050565b600060208284031215610f8357610f82610aaa565b5b6000610f9184828501610f58565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fd4826109e0565b9150610fdf836109e0565b925082610fef57610fee610e32565b5b828204905092915050565b600061100582610b3e565b915060ff820361101857611017610f9a565b5b600182019050919050565b600061102e826109e0565b915063ffffffff820361104457611043610f9a565b5b600182019050919050565b600061105a826109e0565b9150611065836109e0565b92508282101561107857611077610f9a565b5b82820390509291505056fea264697066735822122058427deb0f0251e04dc1cb1fdc698be07772f809b73c2df0654de6c97ad8872564736f6c634300080d0033";

type EasyLinkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EasyLinkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EasyLink__factory extends ContractFactory {
  constructor(...args: EasyLinkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EasyLink> {
    return super.deploy(
      _verifier,
      _levels,
      _hasher,
      overrides || {}
    ) as Promise<EasyLink>;
  }
  override getDeployTransaction(
    _verifier: string,
    _levels: BigNumberish,
    _hasher: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _verifier,
      _levels,
      _hasher,
      overrides || {}
    );
  }
  override attach(address: string): EasyLink {
    return super.attach(address) as EasyLink;
  }
  override connect(signer: Signer): EasyLink__factory {
    return super.connect(signer) as EasyLink__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EasyLinkInterface {
    return new utils.Interface(_abi) as EasyLinkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EasyLink {
    return new Contract(address, _abi, signerOrProvider) as EasyLink;
  }
}
